name: Backend Cluster CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  postgresql:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Testar conexão com PostgreSQL
        run: |
          sudo apt-get install -y postgresql-client
          PGPASSWORD=password psql -h localhost -U user -d testdb -c '\l'

  mongodb:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
      - name: Testar conexão com MongoDB
        run: |
          sleep 5
          mongo --host localhost --eval 'db.runCommand({ connectionStatus: 1 })'

  redis:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - name: Testar Redis
        run: |
          redis-cli -h localhost ping

  mysql:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v4
      - name: Testar conexão com MySQL
        run: |
          sudo apt-get install -y mysql-client
          mysql -h 127.0.0.1 -P 3306 -u root -proot -e 'SHOW DATABASES;'

  rabbitmq:
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
    steps:
      - uses: actions/checkout@v4
      - name: Verificar RabbitMQ
        run: |
          sleep 10
          curl -u guest:guest http://localhost:15672/api/overview

  kafka:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Iniciar Kafka via Docker Compose
        run: |
          docker-compose -f kafka-compose.yml up -d
          sleep 15
          docker ps

  api_gateway:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build API Gateway
        run: echo "Simulando build do API Gateway"

  auth_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Testar serviço de autenticação
        run: echo "Rodando testes de autenticação"

  user_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build serviço de usuário
        run: echo "Compilando serviço de usuário"

  order_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Testar serviço de pedidos
        run: echo "Testando pedidos"

  payment_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Testar serviço de pagamento
        run: echo "Testando pagamentos"

  notification_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Testar envio de notificações
        run: echo "Notificações testadas com sucesso"

  logging_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Verificar logs
        run: echo "Logs funcionando"

  metrics_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Monitoramento e métricas
        run: echo "Coletando métricas"

  search_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Indexação de busca
        run: echo "Indexando conteúdo"

  recommendation_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Testar recomendações
        run: echo "Recomendações geradas"

  cache_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Verificar cache
        run: echo "Cache funcionando"

  billing_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Testar faturamento
        run: echo "Faturamento em ordem"

  analytics_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Análise de dados
        run: echo "Análise concluída"

  email_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Testar envio de e-mail
        run: echo "E-mails enviados com sucesso"
